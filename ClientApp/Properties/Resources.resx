<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="accept_Button" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="addNewEmployee" xml:space="preserve">
    <value>Add new employee</value>
  </data>
  <data name="addPhoneNumber_Button" xml:space="preserve">
    <value>Add phone number</value>
  </data>
  <data name="addPhoneNumber_TextBlock" xml:space="preserve">
    <value>Add new phone number for employee</value>
  </data>
  <data name="cancel_Button" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="changeEmployeeTab" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="changeEmployee_Button" xml:space="preserve">
    <value>Change employee data</value>
  </data>
  <data name="changePhoneNumber_Button" xml:space="preserve">
    <value>Change phone number</value>
  </data>
  <data name="changePhoneNumber_TextBlock" xml:space="preserve">
    <value>Change phone number of employee</value>
  </data>
  <data name="changePhoneTab" xml:space="preserve">
    <value>change</value>
  </data>
  <data name="change_Button" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="closeIcon" xml:space="preserve">
    <value>x</value>
  </data>
  <data name="confirmDialogTitle" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="deleteEmployeeConfirmMessage" xml:space="preserve">
    <value>Are you sure you want to delete profile of this employee?</value>
  </data>
  <data name="deleteEmployee_Button" xml:space="preserve">
    <value>Delete this employee</value>
  </data>
  <data name="deletePhoneConfirmMessage" xml:space="preserve">
    <value>Are you sure you want to delete this phone number?</value>
  </data>
  <data name="deletePhoneNumber" xml:space="preserve">
    <value>Delete phone number</value>
  </data>
  <data name="delete_Button" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="employeeNotExist" xml:space="preserve">
    <value>Could not find this employee</value>
  </data>
  <data name="employeePhonesList" xml:space="preserve">
    <value>Employee phones number list:</value>
  </data>
  <data name="emptyEmployeePhonesList" xml:space="preserve">
    <value>This employee have no phones number</value>
  </data>
  <data name="findEmployee" xml:space="preserve">
    <value>Find an employee</value>
  </data>
  <data name="hintFirstName" xml:space="preserve">
    <value>Enter the first name</value>
  </data>
  <data name="hintFirstNameOptional" xml:space="preserve">
    <value>Enter the first name (optional)</value>
  </data>
  <data name="hintLogin" xml:space="preserve">
    <value>Enter the login</value>
  </data>
  <data name="hintMiddleNameOptional" xml:space="preserve">
    <value>Enter the middle name (optional)</value>
  </data>
  <data name="hintSecondNameOptional" xml:space="preserve">
    <value>Enter the second name (optional)</value>
  </data>
  <data name="mainPage" xml:space="preserve">
    <value>Main page</value>
  </data>
  <data name="newEmployeeTab" xml:space="preserve">
    <value>New employee</value>
  </data>
  <data name="newPhoneTab" xml:space="preserve">
    <value>new phone</value>
  </data>
  <data name="noResult" xml:space="preserve">
    <value>No result</value>
  </data>
  <data name="phoneErrorEmployeeNotExist" xml:space="preserve">
    <value>Could not find the employee to whom the number is being added</value>
  </data>
  <data name="phoneErrorEmployeeOrPhoneNotExist" xml:space="preserve">
    <value>Could not find this phone number or employee to whom the number is being added</value>
  </data>
  <data name="phoneErrorPhoneAlreadyExist" xml:space="preserve">
    <value>This phone number already exists in the system</value>
  </data>
  <data name="searchByName" xml:space="preserve">
    <value>Search employee by name</value>
  </data>
  <data name="serverErrorMessage" xml:space="preserve">
    <value>Server error occurred while request</value>
  </data>
  <data name="showAllEmployees" xml:space="preserve">
    <value>Show all employees</value>
  </data>
  <data name="successfulEmployeeAddingMessage" xml:space="preserve">
    <value>Employee was added successfully</value>
  </data>
  <data name="successfulEmployeeChangingMessage" xml:space="preserve">
    <value>Employee was changed successfully</value>
  </data>
  <data name="successfulEmployeeRemovingMessage" xml:space="preserve">
    <value>Employee was removed successfully</value>
  </data>
  <data name="successfulPhoneAddingMessage" xml:space="preserve">
    <value>Phone was added successfully</value>
  </data>
  <data name="successfulPhoneChangingMessage" xml:space="preserve">
    <value>Phone was changed successfully</value>
  </data>
  <data name="successfulPhoneRemovingMessage" xml:space="preserve">
    <value>Phone was removed successfully</value>
  </data>
  <data name="warningMessageEmployeeInvalidModel" xml:space="preserve">
    <value>Invalid input data - login or firstname can't be empty</value>
  </data>
  <data name="warningMessageEmployeeInvalidSymbols" xml:space="preserve">
    <value>Name or login can't contain the following symbols:</value>
  </data>
  <data name="warningMessagePhoneField" xml:space="preserve">
    <value>Enter 11 didits to this field</value>
  </data>
</root>